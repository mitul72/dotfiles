#!/bin/sh

# Loop through all attached batteries and format the info
for battery in $(ls -d /sys/class/power_supply/* | grep BAT); do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	capacity=$(cat "$battery/capacity")
	status=$(cat "$battery/status")
	if [ "$status" = "Charging" ]; then
		if [ "$capacity" -ge 80 ]; then
			baticon="󰂅" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 60 ]; then
			baticon="󰂊" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 40 ]; then
			baticon="󰂉" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 20 ]; then
			baticon="󰂈" # new codepoint
			# baticon="" # pre-v3 codepoint
		else
			baticon="󰂆" # new codepoint
			# baticon="" # pre-v3 codepoint
		fi
	else
		if [ "$capacity" -ge 80 ]; then
			baticon="󰁹" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 60 ]; then
			baticon="󰂁" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 40 ]; then
			baticon="󰁿" # new codepoint
			# baticon="" # pre-v3 codepoint
		elif [ "$capacity" -ge 20 ]; then
			baticon="󰁽" # new codepoint
			# baticon="" # pre-v3 codepoint
		else
			baticon="󰁻" # new codepoint
			# baticon="" # pre-v3 codepoint
		fi
	fi
	# Prints the info
	printf "%s %d%%" "$baticon" "$capacity"
done
